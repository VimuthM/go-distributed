import {
  __commonJS
} from "./chunk-RSJERJUL.js";

// node_modules/@improbable-eng/grpc-web/dist/grpc-web-client.umd.js
var require_grpc_web_client_umd = __commonJS({
  "node_modules/@improbable-eng/grpc-web/dist/grpc-web-client.umd.js"(exports, module) {
    !function(e, t) {
      if ("object" == typeof exports && "object" == typeof module)
        module.exports = t();
      else if ("function" == typeof define && define.amd)
        define([], t);
      else {
        var r = t();
        for (var n in r)
          ("object" == typeof exports ? exports : e)[n] = r[n];
      }
    }(exports, function() {
      return e = { 418: function(e2, t2) {
        !function(e3, t3) {
          for (var r in t3)
            e3[r] = t3[r];
        }(t2, function(e3) {
          var t3 = {};
          function r(n) {
            if (t3[n])
              return t3[n].exports;
            var o = t3[n] = { i: n, l: false, exports: {} };
            return e3[n].call(o.exports, o, o.exports, r), o.l = true, o.exports;
          }
          return r.m = e3, r.c = t3, r.i = function(e4) {
            return e4;
          }, r.d = function(e4, t4, n) {
            r.o(e4, t4) || Object.defineProperty(e4, t4, { configurable: false, enumerable: true, get: n });
          }, r.n = function(e4) {
            var t4 = e4 && e4.__esModule ? function() {
              return e4.default;
            } : function() {
              return e4;
            };
            return r.d(t4, "a", t4), t4;
          }, r.o = function(e4, t4) {
            return Object.prototype.hasOwnProperty.call(e4, t4);
          }, r.p = "", r(r.s = 1);
        }([function(e3, t3, r) {
          "use strict";
          Object.defineProperty(t3, "__esModule", { value: true });
          var n = r(3), o = function() {
            function e4(e5, t4) {
              void 0 === e5 && (e5 = {}), void 0 === t4 && (t4 = { splitValues: false });
              var r2, o2 = this;
              this.headersMap = {}, e5 && ("undefined" != typeof Headers && e5 instanceof Headers ? n.getHeaderKeys(e5).forEach(function(r3) {
                n.getHeaderValues(e5, r3).forEach(function(e6) {
                  t4.splitValues ? o2.append(r3, n.splitHeaderValue(e6)) : o2.append(r3, e6);
                });
              }) : "object" == typeof (r2 = e5) && "object" == typeof r2.headersMap && "function" == typeof r2.forEach ? e5.forEach(function(e6, t5) {
                o2.append(e6, t5);
              }) : "undefined" != typeof Map && e5 instanceof Map ? e5.forEach(function(e6, t5) {
                o2.append(t5, e6);
              }) : "string" == typeof e5 ? this.appendFromString(e5) : "object" == typeof e5 && Object.getOwnPropertyNames(e5).forEach(function(t5) {
                var r3 = e5[t5];
                Array.isArray(r3) ? r3.forEach(function(e6) {
                  o2.append(t5, e6);
                }) : o2.append(t5, r3);
              }));
            }
            return e4.prototype.appendFromString = function(e5) {
              for (var t4 = e5.split("\r\n"), r2 = 0; r2 < t4.length; r2++) {
                var n2 = t4[r2], o2 = n2.indexOf(":");
                if (o2 > 0) {
                  var s = n2.substring(0, o2).trim(), i = n2.substring(o2 + 1).trim();
                  this.append(s, i);
                }
              }
            }, e4.prototype.delete = function(e5, t4) {
              var r2 = n.normalizeName(e5);
              if (void 0 === t4)
                delete this.headersMap[r2];
              else {
                var o2 = this.headersMap[r2];
                if (o2) {
                  var s = o2.indexOf(t4);
                  s >= 0 && o2.splice(s, 1), 0 === o2.length && delete this.headersMap[r2];
                }
              }
            }, e4.prototype.append = function(e5, t4) {
              var r2 = this, o2 = n.normalizeName(e5);
              Array.isArray(this.headersMap[o2]) || (this.headersMap[o2] = []), Array.isArray(t4) ? t4.forEach(function(e6) {
                r2.headersMap[o2].push(n.normalizeValue(e6));
              }) : this.headersMap[o2].push(n.normalizeValue(t4));
            }, e4.prototype.set = function(e5, t4) {
              var r2 = n.normalizeName(e5);
              if (Array.isArray(t4)) {
                var o2 = [];
                t4.forEach(function(e6) {
                  o2.push(n.normalizeValue(e6));
                }), this.headersMap[r2] = o2;
              } else
                this.headersMap[r2] = [n.normalizeValue(t4)];
            }, e4.prototype.has = function(e5, t4) {
              var r2 = this.headersMap[n.normalizeName(e5)];
              if (!Array.isArray(r2))
                return false;
              if (void 0 !== t4) {
                var o2 = n.normalizeValue(t4);
                return r2.indexOf(o2) >= 0;
              }
              return true;
            }, e4.prototype.get = function(e5) {
              var t4 = this.headersMap[n.normalizeName(e5)];
              return void 0 !== t4 ? t4.concat() : [];
            }, e4.prototype.forEach = function(e5) {
              var t4 = this;
              Object.getOwnPropertyNames(this.headersMap).forEach(function(r2) {
                e5(r2, t4.headersMap[r2]);
              }, this);
            }, e4.prototype.toHeaders = function() {
              if ("undefined" != typeof Headers) {
                var e5 = new Headers();
                return this.forEach(function(t4, r2) {
                  r2.forEach(function(r3) {
                    e5.append(t4, r3);
                  });
                }), e5;
              }
              throw new Error("Headers class is not defined");
            }, e4;
          }();
          t3.BrowserHeaders = o;
        }, function(e3, t3, r) {
          "use strict";
          Object.defineProperty(t3, "__esModule", { value: true });
          var n = r(0);
          t3.BrowserHeaders = n.BrowserHeaders;
        }, function(e3, t3, r) {
          "use strict";
          Object.defineProperty(t3, "__esModule", { value: true }), t3.iterateHeaders = function(e4, t4) {
            for (var r2 = e4[Symbol.iterator](), n = r2.next(); !n.done; )
              t4(n.value[0]), n = r2.next();
          }, t3.iterateHeadersKeys = function(e4, t4) {
            for (var r2 = e4.keys(), n = r2.next(); !n.done; )
              t4(n.value), n = r2.next();
          };
        }, function(e3, t3, r) {
          "use strict";
          Object.defineProperty(t3, "__esModule", { value: true });
          var n = r(2);
          t3.normalizeName = function(e4) {
            if ("string" != typeof e4 && (e4 = String(e4)), /[^a-z0-9\-#$%&'*+.\^_`|~]/i.test(e4))
              throw new TypeError("Invalid character in header field name");
            return e4.toLowerCase();
          }, t3.normalizeValue = function(e4) {
            return "string" != typeof e4 && (e4 = String(e4)), e4;
          }, t3.getHeaderValues = function(e4, t4) {
            var r2 = e4;
            if (r2 instanceof Headers && r2.getAll)
              return r2.getAll(t4);
            var n2 = r2.get(t4);
            return n2 && "string" == typeof n2 ? [n2] : n2;
          }, t3.getHeaderKeys = function(e4) {
            var t4 = e4, r2 = {}, o = [];
            return t4.keys ? n.iterateHeadersKeys(t4, function(e5) {
              r2[e5] || (r2[e5] = true, o.push(e5));
            }) : t4.forEach ? t4.forEach(function(e5, t5) {
              r2[t5] || (r2[t5] = true, o.push(t5));
            }) : n.iterateHeaders(t4, function(e5) {
              var t5 = e5[0];
              r2[t5] || (r2[t5] = true, o.push(t5));
            }), o;
          }, t3.splitHeaderValue = function(e4) {
            var t4 = [];
            return e4.split(", ").forEach(function(e5) {
              e5.split(",").forEach(function(e6) {
                t4.push(e6);
              });
            }), t4;
          };
        }]));
      }, 617: function(e2, t2, r) {
        "use strict";
        Object.defineProperty(t2, "__esModule", { value: true }), t2.ChunkParser = t2.ChunkType = t2.encodeASCII = t2.decodeASCII = void 0;
        var n, o = r(65);
        function s(e3) {
          return 9 === (t3 = e3) || 10 === t3 || 13 === t3 || e3 >= 32 && e3 <= 126;
          var t3;
        }
        function i(e3) {
          for (var t3 = 0; t3 !== e3.length; ++t3)
            if (!s(e3[t3]))
              throw new Error("Metadata is not valid (printable) ASCII");
          return String.fromCharCode.apply(String, Array.prototype.slice.call(e3));
        }
        function a(e3) {
          return 128 == (128 & e3.getUint8(0));
        }
        function u(e3) {
          return e3.getUint32(1, false);
        }
        function d(e3, t3, r2) {
          return e3.byteLength - t3 >= r2;
        }
        function c(e3, t3, r2) {
          if (e3.slice)
            return e3.slice(t3, r2);
          var n2 = e3.length;
          void 0 !== r2 && (n2 = r2);
          for (var o2 = new Uint8Array(n2 - t3), s2 = 0, i2 = t3; i2 < n2; i2++)
            o2[s2++] = e3[i2];
          return o2;
        }
        t2.decodeASCII = i, t2.encodeASCII = function(e3) {
          for (var t3 = new Uint8Array(e3.length), r2 = 0; r2 !== e3.length; ++r2) {
            var n2 = e3.charCodeAt(r2);
            if (!s(n2))
              throw new Error("Metadata contains invalid ASCII");
            t3[r2] = n2;
          }
          return t3;
        }, function(e3) {
          e3[e3.MESSAGE = 1] = "MESSAGE", e3[e3.TRAILERS = 2] = "TRAILERS";
        }(n = t2.ChunkType || (t2.ChunkType = {}));
        var p = function() {
          function e3() {
            this.buffer = null, this.position = 0;
          }
          return e3.prototype.parse = function(e4, t3) {
            if (0 === e4.length && t3)
              return [];
            var r2, s2 = [];
            if (null == this.buffer)
              this.buffer = e4, this.position = 0;
            else if (this.position === this.buffer.byteLength)
              this.buffer = e4, this.position = 0;
            else {
              var p2 = this.buffer.byteLength - this.position, h = new Uint8Array(p2 + e4.byteLength), f = c(this.buffer, this.position);
              h.set(f, 0);
              var l = new Uint8Array(e4);
              h.set(l, p2), this.buffer = h, this.position = 0;
            }
            for (; ; ) {
              if (!d(this.buffer, this.position, 5))
                return s2;
              var g = c(this.buffer, this.position, this.position + 5), b = new DataView(g.buffer, g.byteOffset, g.byteLength), y = u(b);
              if (!d(this.buffer, this.position, 5 + y))
                return s2;
              var v = c(this.buffer, this.position + 5, this.position + 5 + y);
              if (this.position += 5 + y, a(b))
                return s2.push({ chunkType: n.TRAILERS, trailers: (r2 = v, new o.Metadata(i(r2))) }), s2;
              s2.push({ chunkType: n.MESSAGE, data: v });
            }
          }, e3;
        }();
        t2.ChunkParser = p;
      }, 8: function(e2, t2) {
        "use strict";
        var r;
        Object.defineProperty(t2, "__esModule", { value: true }), t2.httpStatusToCode = t2.Code = void 0, function(e3) {
          e3[e3.OK = 0] = "OK", e3[e3.Canceled = 1] = "Canceled", e3[e3.Unknown = 2] = "Unknown", e3[e3.InvalidArgument = 3] = "InvalidArgument", e3[e3.DeadlineExceeded = 4] = "DeadlineExceeded", e3[e3.NotFound = 5] = "NotFound", e3[e3.AlreadyExists = 6] = "AlreadyExists", e3[e3.PermissionDenied = 7] = "PermissionDenied", e3[e3.ResourceExhausted = 8] = "ResourceExhausted", e3[e3.FailedPrecondition = 9] = "FailedPrecondition", e3[e3.Aborted = 10] = "Aborted", e3[e3.OutOfRange = 11] = "OutOfRange", e3[e3.Unimplemented = 12] = "Unimplemented", e3[e3.Internal = 13] = "Internal", e3[e3.Unavailable = 14] = "Unavailable", e3[e3.DataLoss = 15] = "DataLoss", e3[e3.Unauthenticated = 16] = "Unauthenticated";
        }(r = t2.Code || (t2.Code = {})), t2.httpStatusToCode = function(e3) {
          switch (e3) {
            case 0:
              return r.Internal;
            case 200:
              return r.OK;
            case 400:
              return r.InvalidArgument;
            case 401:
              return r.Unauthenticated;
            case 403:
              return r.PermissionDenied;
            case 404:
              return r.NotFound;
            case 409:
              return r.Aborted;
            case 412:
              return r.FailedPrecondition;
            case 429:
              return r.ResourceExhausted;
            case 499:
              return r.Canceled;
            case 500:
              return r.Unknown;
            case 501:
              return r.Unimplemented;
            case 503:
              return r.Unavailable;
            case 504:
              return r.DeadlineExceeded;
            default:
              return r.Unknown;
          }
        };
      }, 934: function(e2, t2, r) {
        "use strict";
        Object.defineProperty(t2, "__esModule", { value: true }), t2.client = void 0;
        var n = r(65), o = r(617), s = r(8), i = r(346), a = r(57), u = r(882);
        t2.client = function(e3, t3) {
          return new d(e3, t3);
        };
        var d = function() {
          function e3(e4, t3) {
            this.started = false, this.sentFirstMessage = false, this.completed = false, this.closed = false, this.finishedSending = false, this.onHeadersCallbacks = [], this.onMessageCallbacks = [], this.onEndCallbacks = [], this.parser = new o.ChunkParser(), this.methodDefinition = e4, this.props = t3, this.createTransport();
          }
          return e3.prototype.createTransport = function() {
            var e4 = this.props.host + "/" + this.methodDefinition.service.serviceName + "/" + this.methodDefinition.methodName, t3 = { methodDefinition: this.methodDefinition, debug: this.props.debug || false, url: e4, onHeaders: this.onTransportHeaders.bind(this), onChunk: this.onTransportChunk.bind(this), onEnd: this.onTransportEnd.bind(this) };
            this.props.transport ? this.transport = this.props.transport(t3) : this.transport = a.makeDefaultTransport(t3);
          }, e3.prototype.onTransportHeaders = function(e4, t3) {
            if (this.props.debug && i.debug("onHeaders", e4, t3), this.closed)
              this.props.debug && i.debug("grpc.onHeaders received after request was closed - ignoring");
            else if (0 === t3)
              ;
            else {
              this.responseHeaders = e4, this.props.debug && i.debug("onHeaders.responseHeaders", JSON.stringify(this.responseHeaders, null, 2));
              var r2 = c(e4);
              this.props.debug && i.debug("onHeaders.gRPCStatus", r2);
              var n2 = r2 && r2 >= 0 ? r2 : s.httpStatusToCode(t3);
              this.props.debug && i.debug("onHeaders.code", n2);
              var o2 = e4.get("grpc-message") || [];
              if (this.props.debug && i.debug("onHeaders.gRPCMessage", o2), this.rawOnHeaders(e4), n2 !== s.Code.OK) {
                var a2 = this.decodeGRPCStatus(o2[0]);
                this.rawOnError(n2, a2, e4);
              }
            }
          }, e3.prototype.onTransportChunk = function(e4) {
            var t3 = this;
            if (this.closed)
              this.props.debug && i.debug("grpc.onChunk received after request was closed - ignoring");
            else {
              var r2 = [];
              try {
                r2 = this.parser.parse(e4);
              } catch (e5) {
                return this.props.debug && i.debug("onChunk.parsing error", e5, e5.message), void this.rawOnError(s.Code.Internal, "parsing error: " + e5.message);
              }
              r2.forEach(function(e5) {
                if (e5.chunkType === o.ChunkType.MESSAGE) {
                  var r3 = t3.methodDefinition.responseType.deserializeBinary(e5.data);
                  t3.rawOnMessage(r3);
                } else
                  e5.chunkType === o.ChunkType.TRAILERS && (t3.responseHeaders ? (t3.responseTrailers = new n.Metadata(e5.trailers), t3.props.debug && i.debug("onChunk.trailers", t3.responseTrailers)) : (t3.responseHeaders = new n.Metadata(e5.trailers), t3.rawOnHeaders(t3.responseHeaders)));
              });
            }
          }, e3.prototype.onTransportEnd = function() {
            if (this.props.debug && i.debug("grpc.onEnd"), this.closed)
              this.props.debug && i.debug("grpc.onEnd received after request was closed - ignoring");
            else if (void 0 !== this.responseTrailers) {
              var e4 = c(this.responseTrailers);
              if (null !== e4) {
                var t3 = this.responseTrailers.get("grpc-message"), r2 = this.decodeGRPCStatus(t3[0]);
                this.rawOnEnd(e4, r2, this.responseTrailers);
              } else
                this.rawOnError(s.Code.Internal, "Response closed without grpc-status (Trailers provided)");
            } else {
              if (void 0 === this.responseHeaders)
                return void this.rawOnError(s.Code.Unknown, "Response closed without headers");
              var n2 = c(this.responseHeaders), o2 = this.responseHeaders.get("grpc-message");
              if (this.props.debug && i.debug("grpc.headers only response ", n2, o2), null === n2)
                return void this.rawOnEnd(s.Code.Unknown, "Response closed without grpc-status (Headers only)", this.responseHeaders);
              var a2 = this.decodeGRPCStatus(o2[0]);
              this.rawOnEnd(n2, a2, this.responseHeaders);
            }
          }, e3.prototype.decodeGRPCStatus = function(e4) {
            if (!e4)
              return "";
            try {
              return decodeURIComponent(e4);
            } catch (t3) {
              return e4;
            }
          }, e3.prototype.rawOnEnd = function(e4, t3, r2) {
            var n2 = this;
            this.props.debug && i.debug("rawOnEnd", e4, t3, r2), this.completed || (this.completed = true, this.onEndCallbacks.forEach(function(o2) {
              if (!n2.closed)
                try {
                  o2(e4, t3, r2);
                } catch (e5) {
                  setTimeout(function() {
                    throw e5;
                  }, 0);
                }
            }));
          }, e3.prototype.rawOnHeaders = function(e4) {
            this.props.debug && i.debug("rawOnHeaders", e4), this.completed || this.onHeadersCallbacks.forEach(function(t3) {
              try {
                t3(e4);
              } catch (e5) {
                setTimeout(function() {
                  throw e5;
                }, 0);
              }
            });
          }, e3.prototype.rawOnError = function(e4, t3, r2) {
            var o2 = this;
            void 0 === r2 && (r2 = new n.Metadata()), this.props.debug && i.debug("rawOnError", e4, t3), this.completed || (this.completed = true, this.onEndCallbacks.forEach(function(n2) {
              if (!o2.closed)
                try {
                  n2(e4, t3, r2);
                } catch (e5) {
                  setTimeout(function() {
                    throw e5;
                  }, 0);
                }
            }));
          }, e3.prototype.rawOnMessage = function(e4) {
            var t3 = this;
            this.props.debug && i.debug("rawOnMessage", e4.toObject()), this.completed || this.closed || this.onMessageCallbacks.forEach(function(r2) {
              if (!t3.closed)
                try {
                  r2(e4);
                } catch (e5) {
                  setTimeout(function() {
                    throw e5;
                  }, 0);
                }
            });
          }, e3.prototype.onHeaders = function(e4) {
            this.onHeadersCallbacks.push(e4);
          }, e3.prototype.onMessage = function(e4) {
            this.onMessageCallbacks.push(e4);
          }, e3.prototype.onEnd = function(e4) {
            this.onEndCallbacks.push(e4);
          }, e3.prototype.start = function(e4) {
            if (this.started)
              throw new Error("Client already started - cannot .start()");
            this.started = true;
            var t3 = new n.Metadata(e4 || {});
            t3.set("content-type", "application/grpc-web+proto"), t3.set("x-grpc-web", "1"), this.transport.start(t3);
          }, e3.prototype.send = function(e4) {
            if (!this.started)
              throw new Error("Client not started - .start() must be called before .send()");
            if (this.closed)
              throw new Error("Client already closed - cannot .send()");
            if (this.finishedSending)
              throw new Error("Client already finished sending - cannot .send()");
            if (!this.methodDefinition.requestStream && this.sentFirstMessage)
              throw new Error("Message already sent for non-client-streaming method - cannot .send()");
            this.sentFirstMessage = true;
            var t3 = u.frameRequest(e4);
            this.transport.sendMessage(t3);
          }, e3.prototype.finishSend = function() {
            if (!this.started)
              throw new Error("Client not started - .finishSend() must be called before .close()");
            if (this.closed)
              throw new Error("Client already closed - cannot .send()");
            if (this.finishedSending)
              throw new Error("Client already finished sending - cannot .finishSend()");
            this.finishedSending = true, this.transport.finishSend();
          }, e3.prototype.close = function() {
            if (!this.started)
              throw new Error("Client not started - .start() must be called before .close()");
            if (this.closed)
              throw new Error("Client already closed - cannot .close()");
            this.closed = true, this.props.debug && i.debug("request.abort aborting request"), this.transport.cancel();
          }, e3;
        }();
        function c(e3) {
          var t3 = e3.get("grpc-status") || [];
          if (t3.length > 0)
            try {
              var r2 = t3[0];
              return parseInt(r2, 10);
            } catch (e4) {
              return null;
            }
          return null;
        }
      }, 346: function(e2, t2) {
        "use strict";
        Object.defineProperty(t2, "__esModule", { value: true }), t2.debug = void 0, t2.debug = function() {
          for (var e3 = [], t3 = 0; t3 < arguments.length; t3++)
            e3[t3] = arguments[t3];
          console.debug ? console.debug.apply(null, e3) : console.log.apply(null, e3);
        };
      }, 607: function(e2, t2, r) {
        "use strict";
        Object.defineProperty(t2, "__esModule", { value: true }), t2.grpc = void 0;
        var n, o = r(418), s = r(57), i = r(229), a = r(540), u = r(210), d = r(859), c = r(8), p = r(938), h = r(35), f = r(934);
        (n = t2.grpc || (t2.grpc = {})).setDefaultTransport = s.setDefaultTransportFactory, n.CrossBrowserHttpTransport = d.CrossBrowserHttpTransport, n.FetchReadableStreamTransport = i.FetchReadableStreamTransport, n.XhrTransport = u.XhrTransport, n.WebsocketTransport = a.WebsocketTransport, n.Code = c.Code, n.Metadata = o.BrowserHeaders, n.client = function(e3, t3) {
          return f.client(e3, t3);
        }, n.invoke = p.invoke, n.unary = h.unary;
      }, 938: function(e2, t2, r) {
        "use strict";
        Object.defineProperty(t2, "__esModule", { value: true }), t2.invoke = void 0;
        var n = r(934);
        t2.invoke = function(e3, t3) {
          if (e3.requestStream)
            throw new Error(".invoke cannot be used with client-streaming methods. Use .client instead.");
          var r2 = n.client(e3, { host: t3.host, transport: t3.transport, debug: t3.debug });
          return t3.onHeaders && r2.onHeaders(t3.onHeaders), t3.onMessage && r2.onMessage(t3.onMessage), t3.onEnd && r2.onEnd(t3.onEnd), r2.start(t3.metadata), r2.send(t3.request), r2.finishSend(), { close: function() {
            r2.close();
          } };
        };
      }, 65: function(e2, t2, r) {
        "use strict";
        Object.defineProperty(t2, "__esModule", { value: true }), t2.Metadata = void 0;
        var n = r(418);
        Object.defineProperty(t2, "Metadata", { enumerable: true, get: function() {
          return n.BrowserHeaders;
        } });
      }, 57: function(e2, t2, r) {
        "use strict";
        Object.defineProperty(t2, "__esModule", { value: true }), t2.makeDefaultTransport = t2.setDefaultTransportFactory = void 0;
        var n = r(859), o = function(e3) {
          return n.CrossBrowserHttpTransport({ withCredentials: false })(e3);
        };
        t2.setDefaultTransportFactory = function(e3) {
          o = e3;
        }, t2.makeDefaultTransport = function(e3) {
          return o(e3);
        };
      }, 229: function(e2, t2, r) {
        "use strict";
        var n = this && this.__assign || function() {
          return (n = Object.assign || function(e3) {
            for (var t3, r2 = 1, n2 = arguments.length; r2 < n2; r2++)
              for (var o2 in t3 = arguments[r2])
                Object.prototype.hasOwnProperty.call(t3, o2) && (e3[o2] = t3[o2]);
            return e3;
          }).apply(this, arguments);
        };
        Object.defineProperty(t2, "__esModule", { value: true }), t2.detectFetchSupport = t2.FetchReadableStreamTransport = void 0;
        var o = r(65), s = r(346);
        t2.FetchReadableStreamTransport = function(e3) {
          return function(t3) {
            return function(e4, t4) {
              return e4.debug && s.debug("fetchRequest", e4), new i(e4, t4);
            }(t3, e3);
          };
        };
        var i = function() {
          function e3(e4, t3) {
            this.cancelled = false, this.controller = self.AbortController && new AbortController(), this.options = e4, this.init = t3;
          }
          return e3.prototype.pump = function(e4, t3) {
            var r2 = this;
            if (this.reader = e4, this.cancelled)
              return this.options.debug && s.debug("Fetch.pump.cancel at first pump"), void this.reader.cancel().catch(function(e5) {
                r2.options.debug && s.debug("Fetch.pump.reader.cancel exception", e5);
              });
            this.reader.read().then(function(e5) {
              if (e5.done)
                return r2.options.onEnd(), t3;
              r2.options.onChunk(e5.value), r2.pump(r2.reader, t3);
            }).catch(function(e5) {
              r2.cancelled ? r2.options.debug && s.debug("Fetch.catch - request cancelled") : (r2.cancelled = true, r2.options.debug && s.debug("Fetch.catch", e5.message), r2.options.onEnd(e5));
            });
          }, e3.prototype.send = function(e4) {
            var t3 = this;
            fetch(this.options.url, n(n({}, this.init), { headers: this.metadata.toHeaders(), method: "POST", body: e4, signal: this.controller && this.controller.signal })).then(function(e5) {
              if (t3.options.debug && s.debug("Fetch.response", e5), t3.options.onHeaders(new o.Metadata(e5.headers), e5.status), !e5.body)
                return e5;
              t3.pump(e5.body.getReader(), e5);
            }).catch(function(e5) {
              t3.cancelled ? t3.options.debug && s.debug("Fetch.catch - request cancelled") : (t3.cancelled = true, t3.options.debug && s.debug("Fetch.catch", e5.message), t3.options.onEnd(e5));
            });
          }, e3.prototype.sendMessage = function(e4) {
            this.send(e4);
          }, e3.prototype.finishSend = function() {
          }, e3.prototype.start = function(e4) {
            this.metadata = e4;
          }, e3.prototype.cancel = function() {
            var e4 = this;
            this.cancelled ? this.options.debug && s.debug("Fetch.cancel already cancelled") : (this.cancelled = true, this.controller ? (this.options.debug && s.debug("Fetch.cancel.controller.abort"), this.controller.abort()) : this.options.debug && s.debug("Fetch.cancel.missing abort controller"), this.reader ? (this.options.debug && s.debug("Fetch.cancel.reader.cancel"), this.reader.cancel().catch(function(t3) {
              e4.options.debug && s.debug("Fetch.cancel.reader.cancel exception", t3);
            })) : this.options.debug && s.debug("Fetch.cancel before reader"));
          }, e3;
        }();
        t2.detectFetchSupport = function() {
          return "undefined" != typeof Response && Response.prototype.hasOwnProperty("body") && "function" == typeof Headers;
        };
      }, 859: function(e2, t2, r) {
        "use strict";
        Object.defineProperty(t2, "__esModule", { value: true }), t2.CrossBrowserHttpTransport = void 0;
        var n = r(229), o = r(210);
        t2.CrossBrowserHttpTransport = function(e3) {
          if (n.detectFetchSupport()) {
            var t3 = { credentials: e3.withCredentials ? "include" : "same-origin" };
            return n.FetchReadableStreamTransport(t3);
          }
          return o.XhrTransport({ withCredentials: e3.withCredentials });
        };
      }, 210: function(e2, t2, r) {
        "use strict";
        var n, o = this && this.__extends || (n = function(e3, t3) {
          return (n = Object.setPrototypeOf || { __proto__: [] } instanceof Array && function(e4, t4) {
            e4.__proto__ = t4;
          } || function(e4, t4) {
            for (var r2 in t4)
              Object.prototype.hasOwnProperty.call(t4, r2) && (e4[r2] = t4[r2]);
          })(e3, t3);
        }, function(e3, t3) {
          function r2() {
            this.constructor = e3;
          }
          n(e3, t3), e3.prototype = null === t3 ? Object.create(t3) : (r2.prototype = t3.prototype, new r2());
        });
        Object.defineProperty(t2, "__esModule", { value: true }), t2.stringToArrayBuffer = t2.MozChunkedArrayBufferXHR = t2.XHR = t2.XhrTransport = void 0;
        var s = r(65), i = r(346), a = r(849);
        t2.XhrTransport = function(e3) {
          return function(t3) {
            if (a.detectMozXHRSupport())
              return new d(t3, e3);
            if (a.detectXHROverrideMimeTypeSupport())
              return new u(t3, e3);
            throw new Error("This environment's XHR implementation cannot support binary transfer.");
          };
        };
        var u = function() {
          function e3(e4, t3) {
            this.options = e4, this.init = t3;
          }
          return e3.prototype.onProgressEvent = function() {
            this.options.debug && i.debug("XHR.onProgressEvent.length: ", this.xhr.response.length);
            var e4 = this.xhr.response.substr(this.index);
            this.index = this.xhr.response.length;
            var t3 = p(e4);
            this.options.onChunk(t3);
          }, e3.prototype.onLoadEvent = function() {
            this.options.debug && i.debug("XHR.onLoadEvent"), this.options.onEnd();
          }, e3.prototype.onStateChange = function() {
            this.options.debug && i.debug("XHR.onStateChange", this.xhr.readyState), this.xhr.readyState === XMLHttpRequest.HEADERS_RECEIVED && this.options.onHeaders(new s.Metadata(this.xhr.getAllResponseHeaders()), this.xhr.status);
          }, e3.prototype.sendMessage = function(e4) {
            this.xhr.send(e4);
          }, e3.prototype.finishSend = function() {
          }, e3.prototype.start = function(e4) {
            var t3 = this;
            this.metadata = e4;
            var r2 = new XMLHttpRequest();
            this.xhr = r2, r2.open("POST", this.options.url), this.configureXhr(), this.metadata.forEach(function(e5, t4) {
              r2.setRequestHeader(e5, t4.join(", "));
            }), r2.withCredentials = Boolean(this.init.withCredentials), r2.addEventListener("readystatechange", this.onStateChange.bind(this)), r2.addEventListener("progress", this.onProgressEvent.bind(this)), r2.addEventListener("loadend", this.onLoadEvent.bind(this)), r2.addEventListener("error", function(e5) {
              t3.options.debug && i.debug("XHR.error", e5), t3.options.onEnd(e5.error);
            });
          }, e3.prototype.configureXhr = function() {
            this.xhr.responseType = "text", this.xhr.overrideMimeType("text/plain; charset=x-user-defined");
          }, e3.prototype.cancel = function() {
            this.options.debug && i.debug("XHR.abort"), this.xhr.abort();
          }, e3;
        }();
        t2.XHR = u;
        var d = function(e3) {
          function t3() {
            return null !== e3 && e3.apply(this, arguments) || this;
          }
          return o(t3, e3), t3.prototype.configureXhr = function() {
            this.options.debug && i.debug("MozXHR.configureXhr: setting responseType to 'moz-chunked-arraybuffer'"), this.xhr.responseType = "moz-chunked-arraybuffer";
          }, t3.prototype.onProgressEvent = function() {
            var e4 = this.xhr.response;
            this.options.debug && i.debug("MozXHR.onProgressEvent: ", new Uint8Array(e4)), this.options.onChunk(new Uint8Array(e4));
          }, t3;
        }(u);
        function c(e3, t3) {
          var r2 = e3.charCodeAt(t3);
          if (r2 >= 55296 && r2 <= 56319) {
            var n2 = e3.charCodeAt(t3 + 1);
            n2 >= 56320 && n2 <= 57343 && (r2 = 65536 + (r2 - 55296 << 10) + (n2 - 56320));
          }
          return r2;
        }
        function p(e3) {
          for (var t3 = new Uint8Array(e3.length), r2 = 0, n2 = 0; n2 < e3.length; n2++) {
            var o2 = String.prototype.codePointAt ? e3.codePointAt(n2) : c(e3, n2);
            t3[r2++] = 255 & o2;
          }
          return t3;
        }
        t2.MozChunkedArrayBufferXHR = d, t2.stringToArrayBuffer = p;
      }, 849: function(e2, t2) {
        "use strict";
        var r;
        function n() {
          if (void 0 !== r)
            return r;
          if (XMLHttpRequest) {
            r = new XMLHttpRequest();
            try {
              r.open("GET", "https://localhost");
            } catch (e3) {
            }
          }
          return r;
        }
        function o(e3) {
          var t3 = n();
          if (!t3)
            return false;
          try {
            return t3.responseType = e3, t3.responseType === e3;
          } catch (e4) {
          }
          return false;
        }
        Object.defineProperty(t2, "__esModule", { value: true }), t2.detectXHROverrideMimeTypeSupport = t2.detectMozXHRSupport = t2.xhrSupportsResponseType = void 0, t2.xhrSupportsResponseType = o, t2.detectMozXHRSupport = function() {
          return "undefined" != typeof XMLHttpRequest && o("moz-chunked-arraybuffer");
        }, t2.detectXHROverrideMimeTypeSupport = function() {
          return "undefined" != typeof XMLHttpRequest && XMLHttpRequest.prototype.hasOwnProperty("overrideMimeType");
        };
      }, 540: function(e2, t2, r) {
        "use strict";
        Object.defineProperty(t2, "__esModule", { value: true }), t2.WebsocketTransport = void 0;
        var n, o = r(346), s = r(617);
        !function(e3) {
          e3[e3.FINISH_SEND = 1] = "FINISH_SEND";
        }(n || (n = {}));
        var i = new Uint8Array([1]);
        t2.WebsocketTransport = function() {
          return function(e3) {
            return function(e4) {
              e4.debug && o.debug("websocketRequest", e4);
              var t3, r2 = function(e5) {
                if ("https://" === e5.substr(0, 8))
                  return "wss://" + e5.substr(8);
                if ("http://" === e5.substr(0, 7))
                  return "ws://" + e5.substr(7);
                throw new Error("Websocket transport constructed with non-https:// or http:// host.");
              }(e4.url), a = [];
              function u(e5) {
                if (e5 === n.FINISH_SEND)
                  t3.send(i);
                else {
                  var r3 = e5, o2 = new Int8Array(r3.byteLength + 1);
                  o2.set(new Uint8Array([0])), o2.set(r3, 1), t3.send(o2);
                }
              }
              return { sendMessage: function(e5) {
                t3 && t3.readyState !== t3.CONNECTING ? u(e5) : a.push(e5);
              }, finishSend: function() {
                t3 && t3.readyState !== t3.CONNECTING ? u(n.FINISH_SEND) : a.push(n.FINISH_SEND);
              }, start: function(n2) {
                (t3 = new WebSocket(r2, ["grpc-websockets"])).binaryType = "arraybuffer", t3.onopen = function() {
                  var r3;
                  e4.debug && o.debug("websocketRequest.onopen"), t3.send((r3 = "", n2.forEach(function(e5, t4) {
                    r3 += e5 + ": " + t4.join(", ") + "\r\n";
                  }), s.encodeASCII(r3))), a.forEach(function(e5) {
                    u(e5);
                  });
                }, t3.onclose = function(t4) {
                  e4.debug && o.debug("websocketRequest.onclose", t4), e4.onEnd();
                }, t3.onerror = function(t4) {
                  e4.debug && o.debug("websocketRequest.onerror", t4);
                }, t3.onmessage = function(t4) {
                  e4.onChunk(new Uint8Array(t4.data));
                };
              }, cancel: function() {
                e4.debug && o.debug("websocket.abort"), t3.close();
              } };
            }(e3);
          };
        };
      }, 35: function(e2, t2, r) {
        "use strict";
        Object.defineProperty(t2, "__esModule", { value: true }), t2.unary = void 0;
        var n = r(65), o = r(934);
        t2.unary = function(e3, t3) {
          if (e3.responseStream)
            throw new Error(".unary cannot be used with server-streaming methods. Use .invoke or .client instead.");
          if (e3.requestStream)
            throw new Error(".unary cannot be used with client-streaming methods. Use .client instead.");
          var r2 = null, s = null, i = o.client(e3, { host: t3.host, transport: t3.transport, debug: t3.debug });
          return i.onHeaders(function(e4) {
            r2 = e4;
          }), i.onMessage(function(e4) {
            s = e4;
          }), i.onEnd(function(e4, o2, i2) {
            t3.onEnd({ status: e4, statusMessage: o2, headers: r2 || new n.Metadata(), message: s, trailers: i2 });
          }), i.start(t3.metadata), i.send(t3.request), i.finishSend(), { close: function() {
            i.close();
          } };
        };
      }, 882: function(e2, t2) {
        "use strict";
        Object.defineProperty(t2, "__esModule", { value: true }), t2.frameRequest = void 0, t2.frameRequest = function(e3) {
          var t3 = e3.serializeBinary(), r = new ArrayBuffer(t3.byteLength + 5);
          return new DataView(r, 1, 4).setUint32(0, t3.length, false), new Uint8Array(r, 5).set(t3), new Uint8Array(r);
        };
      } }, t = {}, function r(n) {
        if (t[n])
          return t[n].exports;
        var o = t[n] = { exports: {} };
        return e[n].call(o.exports, o, o.exports, r), o.exports;
      }(607);
      var e, t;
    });
  }
});
export default require_grpc_web_client_umd();
//# sourceMappingURL=@improbable-eng_grpc-web.js.map
